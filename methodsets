//A type may have a method set associated with it. (a set of methods)

// The method set of a type determines the Interfaces that the type implements 

// A NON-POINTER Receiver works with values that are POINTERS or NON-POINTERS
// Receivers (t T) Values T and *T

// A POINTER Receiver only works with values that are POINTERS
// Receivers (t *T) Values *T (value needs to be a pointer)


package main

import (
	"fmt"
	"math"
)

type circle struct {
	radius float64
}

type shape interface {
	area() float64
}

func (c *circle) area() float64 {
	return math.Pi * c.radius * c.radius

	//func info(s shape) {
	//fmt.Println("area", s.area())
}

func main() {
	c := circle{5}

	fmt.Println(c.area())
}
