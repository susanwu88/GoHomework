//bcrypt is a tool to protect user data
//when using bcrypt, need to implement code from the standard code library, bring in the packages from golang.org/x/crypto/bcrypt

package main

import (
	"fmt"
	"golang.org/x/crypto/bcrypt"
)

func main() {
	s := `gonoob123`
	bs, err := bcrypt.GenerateFromPassword([]byte(s), bcrypt.MinCost)
	if err != nil {
		fmt.Println(err)
	}

	fmt.Println(s)
	fmt.Println(bs)

}

//if a password is given, compare hash and password

package main

import (
	"fmt"
	"golang.org/x/crypto/bcrypt"
)

func main() {
	s := `password123`
	bs, err := bcrypt.GenerateFromPassword([]byte(s), bcrypt.MinCost)
	if err != nil {
		fmt.Println(err)
	}

	fmt.Println(s)
	fmt.Println(bs)

	loginPword1 := `password123`

	err = bcrypt.CompareHashAndPassword(bs, []byte(loginPword1))
	if err != nil {
		fmt.Println("You can't login")
		return
	}

}
